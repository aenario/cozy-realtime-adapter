// Generated by CoffeeScript 1.6.2
(function() {
  module.exports = function(compound, patterns) {
    var callbacks, client, defaultCallback, pattern, redis, registerCallback, sio, _i, _len;

    sio = require('socket.io');
    compound.io = sio.listen(compound.server);
    compound.io.set('log level', 2);
    compound.io.set('transports', ['websocket']);
    redis = require('redis');
    client = redis.createClient();
    console.log(' socket.io initialized !');
    callbacks = {};
    defaultCallback = function(ch, msg) {
      return compound.io.sockets.emit(ch, msg);
    };
    registerCallback = function(pattern, callback) {
      var cbs;

      cbs = callbacks[pattern];
      if (cbs == null) {
        cbs = [];
        client.psubscribe(pattern);
      }
      cbs.push(callback);
      return callbacks[pattern] = cbs;
    };
    client.on('pmessage', function(pattern, ch, msg) {
      var callback, cbs, _i, _len, _results;

      console.log(pattern, ch, msg);
      cbs = callbacks[pattern];
      _results = [];
      for (_i = 0, _len = cbs.length; _i < _len; _i++) {
        callback = cbs[_i];
        _results.push(callback(ch, msg));
      }
      return _results;
    });
    for (_i = 0, _len = patterns.length; _i < _len; _i++) {
      pattern = patterns[_i];
      registerCallback(pattern, defaultCallback);
    }
    return {
      on: registerCallback
    };
  };

}).call(this);
